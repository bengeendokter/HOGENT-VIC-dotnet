@page "/historiek"
@using System.Globalization
@inject IActivityService ActivityService
@inject IVirtualMachineRequestService VirtualMachineRequestService
@inject NavigationManager NavigationManager

@if (activities == null)
{
    <Loading Title="Historiek"/>
    return;
} 

@if (error)
{
    <Error Title="Historiek" ErrorMessage="@errorMessage"/>
    return;
}

<GenericLayout Display="false" Title="Historiek">
    <Actions>
        <AnalyticFilter 
            SortBy="@SortBy"
            Status="@Status"
        />
        <a href="/historiek/voorspelling" class="btn-primary">
            Resource Planner
        </a>
    </Actions>
    <Content>
        <section> 
            <table>
                <thead> 
                    <tr>
                        <th></th>
                        <th>Virtual Machine</th>
                        <th>Activiteit</th>
                        <th># CPU</th>
                        <th># RAM</th>
                        <th># Storage</th>
                        <th>Activiteit Datum</th>
                        <th>Klant</th>
                    </tr>
                </thead>
                <tbody>
                    @{var id = 1;}
                    @foreach (ActivityDto.Index activity in activities) 
                    {
                        var vm = activity.VirtualMachine;
                        @if (vm == null) continue;

                        <tr>
                            <td>@(id++)</td>
                            <td>@vm.Name</td>
                            @switch (activity.Type) {
                                case EActivity.Added:
                                    <td>VM toegevoegd</td>
                                    <td class="added">+ @vm.CPU vCPU</td>
                                    <td class="added">+ @vm.RAM GB</td>
                                    <td class="added">+ @vm.Storage GB</td>
                                    break;
                                case EActivity.Deleted:
                                    <td>VM verwijderd</td>
                                    <td class="deleted">- @vm.CPU vCPU</td>
                                    <td class="deleted">- @vm.RAM GB</td>
                                    <td class="deleted">- @vm.Storage GB</td>
                                    break;
                                default:
                                    break;
                            }
                            <td>@activity.CreatedAt.ToString("dd/MM/yyyy", CultureInfo.InvariantCulture)</td>
                            <td>@vm.Client?.Surname @vm.Client?.Name</td>
                        </tr>
                    }
                </tbody>
            </table>
        </section>
    <TablePaging />
    </Content>
</GenericLayout>

@code {
    [Parameter, SupplyParameterFromQuery] public string? SortBy { get; set; }
    [Parameter, SupplyParameterFromQuery] public string? Status { get; set; }
    [Parameter, SupplyParameterFromQuery] public int? Page { get; set; }
    [Parameter, SupplyParameterFromQuery] public int? PageSize { get; set; }

    private List<ActivityDto.Index>? activities;

    private bool error = false;
    private string errorMessage = string.Empty;

    protected override async Task OnParametersSetAsync()
    {
        ActivityRequest.Index request = new()
            {
                SortBy = SortBy,
                Status = Status,
                Page = Page.HasValue ? Page.Value : 1,
                PageSize = PageSize.HasValue ? PageSize.Value : 15,
            };
        await RefreshActivitiesAsync(request);
    }

    private async Task RefreshActivitiesAsync(ActivityRequest.Index request) {

        try
        {
            error = false;
            var response = await ActivityService.GetIndexAsync(request);
            activities = response;
        }
        catch (Exception ex) 
        {
            error = true;
            errorMessage = ex.Message;
        }
    }

    /* Hulpfunctie voor sorteren gebaseerd op EActivity type */
    private int ValueSignByActivityType(EActivity type, int value)
    {
        return type switch
        {
            EActivity.Added => value,
            EActivity.Deleted => -value,
            _ => value
        };
    }
}