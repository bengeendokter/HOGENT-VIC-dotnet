@inject NavigationManager NavigationManager

<div class="optionele-filters" data-testid="type-filter">
    <select class="filter" value="@clientType" @onchange="TypeChanged">
        <option value="" selected>Alle</option>
        <option value="internal">Interne</option>
        <option value="external">Externe</option>
    </select>
</div>

@code {
    [Parameter, EditorRequired] public string? ClientType { get; set; } = default!;

    private string? clientType;

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        clientType = ClientType;
    }

    private void TypeChanged(ChangeEventArgs args)
    {
        clientType = args.Value?.ToString();
        FilterClient();
    }

    private void FilterClient()
    {
        Dictionary<string, object?> parameters = new();

        parameters.Add(nameof(clientType), clientType);

        var uri = NavigationManager.GetUriWithQueryParameters(parameters);
        NavigationManager.NavigateTo(uri);
    }
}
