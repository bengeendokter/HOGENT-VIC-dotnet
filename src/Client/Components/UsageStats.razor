@inject IUsageService UsageService

@if (Display)
{
    <div class="usagebar_toggler @UsageTogglerStyleCss" @onclick="ToggleUsageMenu">
        <OpenIcon />
    </div>

    <div class="usage_bar @UsageVisibleCss">
        <div class="container">
            <div class="top_content">
                <div class="top_circle">
                    <div class="inner_circle">
                        <UsageIcon />
                    </div>
                </div>
                <div class="info">
                    <p>@Title</p>
                </div>
            </div>
            <div class="stats">
                @foreach (var u in Usages)
                {
                    <UsageStat Type=u.UsageType Unit=u.Unit Total=u.Total Used=u.Used />
                }
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public bool Display { get; set; }
    [Parameter] public string? Title { get; set; } = "HUIDIG GEBRUIK";
    [Parameter] public List<UsageDto.Index> Usages { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        if (Usages.Count() > 0) return;

        Usages = await UsageService.GetAllUsageStats();
    }

    private bool disappearOptions = false;

    private string? UsageVisibleCss => disappearOptions ? "available" : null;
    private string? UsageTogglerStyleCss => disappearOptions ? "yes_available" : null;

    private void ToggleUsageMenu()
    {
        disappearOptions = !disappearOptions;
    }
}
