@page "/historiek"
@using System.Globalization
@inject IActivityService ActivityService

<PageTitle>Rapportering</PageTitle>

<div class="title-container">
    <h1>Historiek</h1>
</div>
<div class="analytics-container">
    <div class="currentUse-container">
        <!-- Huidige gebruik component-->
    </div>
    <div class="table-container"> 
        <table>
            <thead> 
                <tr>
                    <th></th>
                    <th>Virtual Machine</th>
                    <th>Activiteit</th>
                    <th># CPU</th>
                    <th># RAM</th>
                    <th># Storage</th>
                    <th>Datum</th>

                </tr>
            </thead>
            <tbody>
                @{var id = 1;}
                @foreach (Activity activity in _activities) 
                {
                    var vm = activity.VirtualMachine;
                    <tr>
                        <td>@(id++)</td>
                        <td>@vm.Name</td>
                        @switch (activity.Type) {
                            case EActivity.Added:
                                <td>VM toegevoegd</td>
                                <td class="added">+ @vm.CPU Cores</td>
                                <td class="added">+ @vm.RAM GB</td>
                                <td class="added">+ @vm.Storage GB</td>
                                break;
                            case EActivity.Deleted:
                                <td>VM verwijderd</td>
                                <td class="deleted">- @vm.CPU Cores</td>
                                <td class="deleted">- @vm.RAM GB</td>
                                <td class="deleted">- @vm.Storage GB</td>
                                break;
                            default:
                                break;
                        }
                        <td>@activity.Date.ToString("dd/MM/yyyy", CultureInfo.InvariantCulture)</td>

                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<div>
    <label for="datum">Kies een datum:</label>

    <input type="date" id="datum" name="datum"
           min="2020-01-01" max="2023-01-01" @bind-value="activitydatum" @bind-value:event="oninput">

    <p>@($"Historiek/capiciteit voor {activitydatum.Day}/{activitydatum.Month}/{activitydatum.Year}:")</p>
    <br />
    <p>capaciteit cpu: @cpu</p>
    <p>capaciteit ram: @ram</p>
    <p>capaciteit opslag: @storage</p>
   
</div>



@code {
    private List<Activity> _activities = new();
    private DateTime activitydatum = DateTime.Now;

    /*TODO business logica voor filter methode: filtert nu op Deleted*/
    private List<Activity> act => _activities.Where(a => (a.Type == EActivity.Deleted)).ToList();

    /*capaciteit cpu, ram en opslag*/
    private int cpu => act.Aggregate(0, (acc, x) => acc + x.VirtualMachine.CPU);
    private int ram => act.Aggregate(0, (acc, x) => acc + x.VirtualMachine.RAM);
    private int storage => act.Aggregate(0, (acc, x) => acc + x.VirtualMachine.Storage);

    protected override void OnInitialized()
    {
        /* Sorteren op datum in back-end*/
        _activities = ActivityService.GetAll();

        //foreach(var activity in _activities) {
        //    Console.WriteLine($"type: {activity.Type}, date: {activity.Date}");
        //}
    }

    class DataItem
    {
        public string Date { get; set; }
        public double Revenue { get; set; }
    }


    string FormatAsMonth(object value)
    {
        if (value != null)
        {
            return Convert.ToDateTime(value).ToString("MMM");
        }

        return string.Empty;
    }

    DataItem[] revenue2019 = new DataItem[] {
        new DataItem
        {
            Date = ("2019-01-01"),
            Revenue = 234000
        },
        new DataItem
        {
            Date = ("2019-02-01"),
            Revenue = 269000
        },
        new DataItem
        {
            Date = ("2019-03-01"),
            Revenue = 233000
        },
        new DataItem
        {
            Date = ("2019-04-01"),
            Revenue = 244000
        },
        new DataItem
        {
            Date = ("2019-05-01"),
            Revenue = 214000
        },
        new DataItem
        {
            Date = ("2019-06-01"),
            Revenue = 253000
        },
        new DataItem
        {
            Date = ("2019-07-01"),
            Revenue = 274000
        },
        new DataItem
        {
            Date = ("2019-08-01"),
            Revenue = 284000
        },
        new DataItem
        {
            Date = ("2019-09-01"),
            Revenue = 273000
        },
        new DataItem
        {
            Date = ("2019-10-01"),
            Revenue = 282000
        },
        new DataItem
        {
            Date = ("2019-11-01"),
            Revenue = 289000
        },
        new DataItem
        {
            Date = ("2019-12-01"),
            Revenue = 294000
        }
    };

   
}
