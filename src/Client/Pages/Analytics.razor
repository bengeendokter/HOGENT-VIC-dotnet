@page "/historiek"
@inject IActivityService ActivityService

<PageTitle>Rapportering</PageTitle>

<div style="background-color: #E4E8EF;">
    <h1 style="padding: 8px 20px;">Historiek</h1>
</div>
<div style="display: flex; flex-direction: row;">
    <div style="background-color: blue; width: 20%;">
        <!-- Huidige gebruik component-->test
    </div>
    <div style="background-color:red; flex: 1 1 auto;"> 
        test
    </div>

</div>

<div>
    <label for="datum">Kies een datum:</label>

    <input type="date" id="datum" name="datum" 
           min="2020-01-01" max="2023-01-01" @bind-value="activitydatum" @bind-value:event="oninput">

    <p>@($"Historiek/capiciteit voor {activitydatum.Day}/{activitydatum.Month}/{activitydatum.Year}:")</p>
    <br />
    <p>capaciteit cpu: @cpu</p>
    <p>capaciteit ram: @ram</p>
    <p>capaciteit opslag: @storage</p>
   
</div>


@code {
    private List<Activity> _activities = new();
    private DateTime activitydatum = DateTime.Now;

    /*TODO business logica voor filter methode: filtert nu op Deleted*/
    private List<Activity> act => _activities.Where(a => (a.Type == EActivity.Deleted)).ToList();

    /*capaciteit cpu, ram en opslag*/
    private int cpu => act.Aggregate(0, (acc, x) => acc + x.VirtualMachine.CPU);
    private int ram => act.Aggregate(0, (acc, x) => acc + x.VirtualMachine.RAM);
    private int storage => act.Aggregate(0, (acc, x) => acc + x.VirtualMachine.Storage);

    protected override void OnInitialized()
    {
        _activities = ActivityService.GetAll();
        foreach(var activity in _activities) {
            Console.WriteLine($"type: {activity.Type}, date: {activity.Date}");
        }
    }
}
