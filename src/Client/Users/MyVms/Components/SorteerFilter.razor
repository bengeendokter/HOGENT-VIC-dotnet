@inject NavigationManager NavigationManager

<div class="optionele-filters">
    <select class="filter-role" value="@SortBy" @onchange="BeschikbaarChanged">
         <option value="">Sorteer op</option>

         <option value="name">Naam</option>
         <option value="nameDesc">Naam (Aflopend)</option>

         <option value="template">Template</option>
         <option value="templateDesc">Template (Aflopend)</option>

         <option value="cpu">VCPU</option>
         <option value="cpuDesc">VCPU (Aflopend)</option>

         <option value="ram">RAM</option>
         <option value="ramDesc">RAM (Aflopend)</option>

         <option value="storage">Opslag</option>
         <option value="storageDesc">Opslag (Aflopend)</option>

         <option value="startdate">Startdatum</option>
         <option value="startdateDesc">Startdatum (Aflopend)</option>

         <option value="enddate">Einddatum</option>
         <option value="enddateDesc">Einddatum (Aflopend)</option>
    </select>
</div>

@code {
    [Parameter, EditorRequired] public string? SortBy { get; set; } = default!;
    private string? sortBy;

    private void BeschikbaarChanged(ChangeEventArgs args)
    {
        sortBy = args.Value?.ToString();
        FilterRole();
    }

    private void FilterRole()
    {
        Dictionary<string, object?> parameters = new();

        parameters.Add(nameof(sortBy), sortBy);

        var uri = NavigationManager.GetUriWithQueryParameters(parameters);
        NavigationManager.NavigateTo(uri);
    }
}
