using System.ComponentModel.DataAnnotations;

<div class="dialog-container">
    <div class="dialog">
        <div class="dialog-title">
            <h2>CustomTemplateDialog</h2>
        </div>
        <EditForm Model="@_template" OnValidSubmit="@HandleValidSubmit">
            <div class="input-group">
                <label>
                    Mode
                    <InputSelect @bind-Value="_template.Mode" class="inputField">
                        @foreach(EMode m in EMode.GetValues(typeof(EMode))){
                            <option value=@m>@m</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="@(()=> _template.Mode)"></ValidationMessage>
                </label>

                <label>
                    CPU <br/>
                    <InputNumber @bind-Value="_template.Stats.Cpu" class="inputField" />
                </label>

                <label>
                    Ram <br />
                    <InputNumber @bind-Value="_template.Stats.Ram" class="inputField" />
                </label>

                <label>
                    Storage <br />
                    <InputNumber @bind-Value="_template.Stats.Storage" class="inputField" />
                </label>
            </div>
            <InputText @bind-Value="_template.Name"/>


            <button @onclick=OnCancel>Annuleer</button>
            <button type="submit">Gebruik aangepaste template</button>
        </EditForm>

    </div>
</div>
@code {
    private Template _template = new();
    [Parameter] public EventCallback OnCancel { get; set; }
    [Parameter] public EventCallback OnConfirm { get; set; }

    private void HandleValidSubmit(){
        OnConfirm.InvokeAsync();
    }
}
