@page "/vm/{id:int}"
@using System.Globalization
@inject IVirtualMachineService VMService
@inject NavigationManager NavigationManager

@if (vm == null)
{
    <p>Loading...</p>
    return;
}

<GenericLayout Display=false Title="@vm.Name"> 
    <Actions>
        <a class="link" href=@($"/vm/manage/{Id}")>Bewerken</a>
    </Actions>
    <Content>
        <section aria-labelledby="vm-title" class="details">
            <div class="details_group">
                <section class="details_item">
                    <h2>Algemeen</h2>
                    <table class="table">
                        <tr>
                            <th>Naam</th>
                            <td>@vm.Name</td>
                        </tr>
                        <tr>
                            <th>Hostname</th>
                            <td>@vm.HostName</td>
                        </tr>
                        <tr>
                            <th>Startdatum gebruik</th>
                            <td>@vm.StartDate.ToString("dd-MM-yyyy", DateTimeFormatInfo.InvariantInfo)</td>
                        </tr>
                        <tr>
                            <th>Einddatum gebruik</th>
                            <td>@vm.EndDate.ToString("dd-MM-yyyy", DateTimeFormatInfo.InvariantInfo)</td>
                        </tr>
                        <tr>
                            <th>FQDN</th>
                            <td>@vm.FQDN</td>
                        </tr>
                        <tr>
                            <th>Hoge beschikbaarheid</th>
                            <td>@(
                                    vm.IsHighlyAvailable ? "Ja" : "Nee"
                        )</td>
                        </tr>
@*                        <tr>
                            <th>Template</th>
                            <td><span lang="en">@vm.Template?.Name</span></td>
                        </tr>*@
                        <tr>
                            <th>Backup</th>
                            <td>@(
                                    vm.BackupFrequency == EBackupFrequency.Daily ? "Dagelijks" : "Wekelijks"
                        ) </td>
                        </tr>
                        <tr>
                            <th>Modus</th>
                            <td>@vm.Software</td>
                        </tr>
                        <tr>
                            <th>Dagen besschikbaar</th>
                            <td>
                                <div class="weekdays">
                                @if (days != null)
                                {
                                    @foreach (KeyValuePair<string, bool> kvp in days)
                                        {
                                            <div class=@("day " + (kvp.Value ? "available" : ""))>
                                                <span title=@kvp.Key aria-hidden="true">@kvp.Key.Substring(0,2)</span>
                                                <span class="sr_only">@($"{kvp.Key} {(kvp.Value ? "" : "niet ")}beschikbaar")</span>
                                            </div>
                                        }
                                }
                                </div>
                            </td>
                        </tr>
                    </table>
                </section>

                <div class="details_subgroup">

                <secion class="details_item specifications">
                    <h2>Specificaties</h2>
                    <table class="table">
                        <tr>
                            <th>Status</th>
                            <td>
                                <span class=@(String.Join(" ", new List<string>() {"vm_status", vm.IsActive ? "active" : ""}))>
                                    @(
                                        vm.IsActive ? "Aan" : "Uit"
                        )
                                </span>
                            </td>
                        </tr>
                        <tr>
                            <th>CPU</th>
                            <td>@vm.CPU vCPU</td>
                        </tr>
                        <tr>
                            <th>Ram</th>
                            <td>@vm.RAM GB</td>
                        </tr>
                        <tr>
                            <th>Opslag</th>
                            <td>@vm.Storage GB</td>
                        </tr>
                    </table>
                </secion>

                <secion class="details_item">
                    <h2>Gebruiker</h2>
                    <table class="table">
                        <tr>
                            <th>Gebruiker</th>
                            <td>admin</td>
                        </tr>
                        <tr>
                            <th>Wachtwoord</th>
                            <td><input class="password" readonly type=@TxtType value="wachtwoord" /><button class="button" type="button" @onclick="ShowPassword"><EyeIcon /></button></td>
                        </tr>
                        <tr>
                            <th>Klant</th>
                                <td>VOKA</td>
                        </tr>
                        <tr>
                                <td colspan="2"><a class="link" href=@($"/klanten/5")>Meer info</a></td>
                        </tr>
                    </table>
                </secion>
                </div>
            </div>
        </section>
        @if (!isRequestingDelete)
        {
                <button class="actionButton btn-delete" @onclick="SetDeleteTrue">Verwijderen</button>
        }
        else
        {
            <div class="actionButton">
                <button class="btn-secondary" @onclick="SetDeleteFalse">Annuleren</button>
                <button class="btn-delete" @onclick="DeleteClientAsync">Verwijderen</button>
            </div>
        }

    </Content>
</GenericLayout>

@code {
    [Parameter] public int Id { get; set; }
    private VirtualMachineDto.Detail? vm;

    private Dictionary<String, bool>? days;

    public string TxtType = "password";
    private bool isRequestingDelete = false;

    protected override async Task OnInitializedAsync()
    {
        vm = await VMService.GetDetailAsync(Id);
        if (vm == null) return;

        days = new(){
        {"Maandag", vm.Availability.HasFlag(EDay.Monday)}
        ,{"Dinsdag", vm.Availability.HasFlag(EDay.Tuesday)}
        ,{"Woensdag", vm.Availability.HasFlag(EDay.Wednesday)}
        ,{"Donderdag", vm.Availability.HasFlag(EDay.Thursday)}
        ,{"Vrijdag", vm.Availability.HasFlag(EDay.Friday)}
        ,{"Zaterdag", vm.Availability.HasFlag(EDay.Saturday)}
        ,{"Zondag", vm.Availability.HasFlag(EDay.Sunday)}
        };
    }

    public void ShowPassword()
    {
        if (this.TxtType == "password")
        {
            this.TxtType = "text";
        }
        else
        {
            this.TxtType = "password";
        }
    }

    private void SetDeleteTrue()
    {
        isRequestingDelete = true;
    }
    private void SetDeleteFalse()
    {
        isRequestingDelete = false;
    }

    private async Task DeleteClientAsync()
    {
        await VMService.DeleteAsync(Id);
        NavigationManager.NavigateTo("/vm");
    } 
}