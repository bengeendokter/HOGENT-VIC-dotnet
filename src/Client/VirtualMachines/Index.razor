@page "/vm"
@using System.Globalization
@inject IVirtualMachineService VMService

<GenericLayout Display=false Title="Virtuele Machines">
    <Content>
        @*TODO change page title*@
        <h1 id="vm-title">Virtuele Machines</h1>

        @*TODO maybe change to table *@
        <section aria-labelledby="vm-title" class="vm_list">

            <table>
                <thead>
                    <tr>
                        <th>
                            <button class="sort_button" @onclick="SortByName"><ArrowIcon/>Naam</button>
                        </th>
                        <th>
                            <button class="sort_button" @onclick="SortByCPU"><ArrowIcon />CPU</button>
                        </th>
                        <th>
                            <button class="sort_button" @onclick="SortByRam"><ArrowIcon/>Ram</button>
                        </th>
                        <th>
                            <button class="sort_button" @onclick="SortByOpslag"><ArrowIcon />Opslag</button>
                        </th>
                        <th>
                            <button class="sort_button" @onclick="SortByStartDatum"><ArrowIcon />Start datum</button>
                        </th>
                        <th>
                            <button class="sort_button" @onclick="SortByEindDatum"><ArrowIcon/>Eind datum</button>
                        </th>
                        <th>
                            <button class="sort_button" @onclick="SortByKlant"><ArrowIcon/>Klant</button>
                        </th>
                        <th>
                            <button class="sort_button" @onclick="SortByStatus"><ArrowIcon />Status</button>
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var vm in list)
                    {
                    <tr>
                    <td><a class="link" href=@($"/vm/{@vm.Id}")>@vm.Name</a></td>
                        <td>@vm.CPU cores</td>
                        <td>@vm.RAM GB</td>
                        <td>@vm.Storage GB</td>
                        <td>@vm.StartDate.ToString("dd-MM-yyyy", DateTimeFormatInfo.InvariantInfo)</td>
                        <td>@vm.EndDate.ToString("dd-MM-yyyy", DateTimeFormatInfo.InvariantInfo)</td>
                        <td>HoGent</td>
                        <td>
                            <span class=@(String.Join(" ", new List<string>() {"vm_status", vm.IsActive ? "active" : ""}))>@(vm.IsActive ? "Aan" : "Uit") </span>
                        </td>
                    </tr>
                    }
                </tbody>
            </table>
        </section>
    </Content>
</GenericLayout>

@code {
    private List<VirtualMachineDto.Index> list = new();
    protected override void OnInitialized()
    {
        list = VMService.GetAll();
    }

    public void SortByName()
    {
        list = list.OrderBy(vm => vm.Name).ToList();
        StateHasChanged();
    }

    public void SortByCPU()
    {
        list = list.OrderBy(vm => vm.CPU).ToList();
        StateHasChanged();
    }

    public void SortByRam()
    {
        list = list.OrderBy(vm => vm.RAM).ToList();
        StateHasChanged();
    }

    public void SortByOpslag()
    {
        list = list.OrderBy(vm => vm.Storage).ToList();
        StateHasChanged();
    }

    public void SortByStartDatum()
    {
        list = list.OrderBy(vm => vm.StartDate).ToList();
        StateHasChanged();
    }

    public void SortByEindDatum()
    {
        list = list.OrderBy(vm => vm.EndDate).ToList();
        StateHasChanged();
    }

    public void SortByKlant()
    {
    }

    public void SortByStatus()
    {
        list = list.OrderBy(vm => vm.IsActive).ToList();
        StateHasChanged();
    }
}