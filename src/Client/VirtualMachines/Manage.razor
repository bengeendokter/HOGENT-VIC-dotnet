@page "/vm/manage"
@page "/vm/manage/{id:int}"
@page "/vm/manage/request/{id:int}"
@using Microsoft.Extensions.Logging
@inject ILogger<Manage> Logger
@inject IVirtualMachineService VirtualMachineService
@inject IVirtualMachineRequestService VirtualMachineRequestService
@inject NavigationManager NavigationManager
@inject ITemplateService TemplateService

<GenericLayout Display=false Title="VM - Beheren">
    <Content>
        <EditForm Model="@_vm" OnValidSubmit="@HandleValidSubmit">
            <FluentValidationValidator />
            <div class="headerRow">
                <h1>VM @(Id.HasValue && !NavigationManager.Uri.Contains("request") ? $"Wijzigen - {_vm.Name}" :
                        "Aanmaken")</h1>
            </div>

            <div class="grid">
                <div class="templates">
                    <h2>Templates</h2>
                    <div class="wrap">
                    @foreach (TemplateDto.Detail t in _templates)
                    {
                            <TemplateCard Template="@t" ActiveTemplate=@_vm?.Template TemplateClicked="() => HandleTemplate(t)"></TemplateCard>
                    }

                    </div>
                    @if(_customTemplate != null){
                        <div> Test</div>
                    }
                    <button class="btn-secondary" @onclick="CustomTemplate">Aangepaste template</button>
                </div>

                <div class="request">
                @if (_request != null)
                {
                    <h2>Informatie van de aanvrager</h2>
                        <div class="input-group">
                        <label>
                            Projectnaam:<br/>
                            <div class="field">@_request.ProjectNaam</div>
                        </label>
                        <label>
                            Start datum:<br/>
                                <div class="field">@_request.StartDate.ToString("dd/MM/yyyy")</div>
                        </label>
                        <label>
                            Eind datum:<br/>
                                <div class="field">@_request.EndDate.ToString("dd/MM/yyyy")</div>
                        </label>
                        <label>
                            Email aanvrager:<br/>
                            <div class="field">@_request.EmailAanvrager</div>
                        </label>
                        <label>
                            Nummer aanvrager:<br/>
                            <div class="field">@_request.NummerAanvrager</div>
                        </label>

                    </div>
                        <label>
                            Extra info over de aanvraag:<br />
                            <div class="reden">@_request.Reason</div>
                        </label>
                }
                </div>


                <div class="form">
                    <h2> Algemene informatie</h2>
                    <div class="input-group">
                        <label>
                            Naam<br />
                            <InputText @bind-Value="_vm.Name" class="inputField"></InputText>
                            <ValidationMessage For="@(()=> _vm.Name)"></ValidationMessage>
                        </label>

                        <label>
                            Hostname<br />
                            <InputText @bind-Value="_vm.HostName" class="inputField"></InputText>
                            <ValidationMessage For="@(()=> _vm.HostName)"></ValidationMessage>
                        </label>

                        <label>
                            FQDN<br />
                            <InputText @bind-Value="_vm.FQDN" class="inputField"></InputText>
                            <ValidationMessage For="@(()=> _vm.FQDN)"></ValidationMessage>
                        </label>

                        <label>
                            Klant<br />
                            <InputSelect @bind-Value="_vm.Client" class="inputField">
                                <!--
                                <option value="" selected> Option 1</option>
                                <option value=""         > Option 2</option>
                                -->
                            </InputSelect>
                        </label>

                        <label>
                            Start datum<br />
                            <InputDate @bind-Value="_vm.StartDate" class="inputField"></InputDate>
                            <ValidationMessage For="@(()=> _vm.StartDate)"></ValidationMessage>
                        </label>

                        <label>
                            Eind datum<br />
                            <InputDate @bind-Value="_vm.EndDate" class="inputField"></InputDate>
                            <ValidationMessage For="@(()=> _vm.EndDate)"></ValidationMessage>
                        </label>

                        <label>
                            Moet de VM altijd besckikbaar zijn?<br />
                            <InputSelect @bind-Value="_vm.IsHighlyAvailable" class="inputField">
                                <option value=true> Ja</option>
                                <option value=false> Nee</option>
                            </InputSelect>
                            <ValidationMessage For="@(()=> _vm.IsHighlyAvailable)"></ValidationMessage>
                        </label>

                        <label>
                            Hoeveelheid backups<br />
                            <InputSelect @bind-Value="_vm.BackupFrequency" class="inputField">
                                <option value="@EBackupFrequency.Weekly"> Weekelijks</option>
                                <option value="@EBackupFrequency.Daily"> Dagelijks</option>
                            </InputSelect>
                            <ValidationMessage For="@(()=> _vm.BackupFrequency)"></ValidationMessage>
                        </label>

                        <label>
                            Host<br />
                            <InputSelect @bind-Value="_vm.Host" class="inputField">
                                <option value="server1">Server 1</option>
                                <option value="server2">Server 2</option>
                            </InputSelect>
                            <ValidationMessage For="@(()=> _vm.Host)"></ValidationMessage>
                        </label>
       
                        <label>
                            Poorten:<br />
                            <InputText @bind-Value="_vm.Poorten" class="inputField"></InputText>
                            <ValidationMessage For="@(()=> _vm.Poorten)"></ValidationMessage>
                        </label>

                        <label>
                            Wanneer moet de VM online staan?<br />
                            <InputRadioGroup @bind-Value="_vm.Availability">
                                <InputRadio Value="@EDay.Monday" />Maandag
                                <InputRadio Value="@EDay.Tuesday" />Dinsdag
                                <InputRadio Value="@EDay.Wednesday" />Woensdag
                                <InputRadio Value="@EDay.Thursday"/>Donderdag
                                <InputRadio Value="@EDay.Friday" />Vrijdag
                                <InputRadio Value="@EDay.Saturday" />Zaterdag
                                <InputRadio Value="@EDay.Sunday" />Zondag
                            </InputRadioGroup>
                            <ValidationMessage For="@(()=> _vm.Availability)"></ValidationMessage>
                        </label>

                    </div>
                    <button type="submit">Submit</button>
                </div>
                
            </div>
            </EditForm>
@*        @if(_showCustomTemplate){
            <CustomTemplateDialog OnCancel="@CancelCustomTemp" OnConfirm="@ConfirmCustomTemp"></CustomTemplateDialog>
        }*@
    </Content>
</GenericLayout>

@code {
    private VirtualMachineDto.Mutate _vm = new();
    private VirtualMachineRequest? _request;
    private TemplateDto.Detail? _customTemplate;
    private List<TemplateDto.Detail> _templates = new();
    private bool _showCustomTemplate = false;

    [Parameter]
    public int? Id { get; set; }

    protected override void OnInitialized()
    {
        _templates = TemplateService.GetAll();
        if (!Id.HasValue) return;

        if (NavigationManager.Uri.Contains("request"))
        {
            _request = VirtualMachineRequestService.Get(Id.Value);
            if (_request == null) return;

            _vm.StartDate = _request.StartDate;
            _vm.EndDate = _request.EndDate;
        }
        else
        {
            var vm = VirtualMachineService.Get(Id.Value) ?? new();
            _vm.Name = vm.Name;
            _vm.CPU = vm.CPU;
            _vm.RAM = vm.RAM;
            _vm.Storage = vm.Storage;
            _vm.StartDate = vm.StartDate;
            _vm.EndDate = vm.EndDate;
            _vm.IsActive = vm.IsActive;
            _vm.HostName = vm.HostName;
            _vm.FQDN = vm.FQDN;
            _vm.IsHighlyAvailable = vm.IsHighlyAvailable;
            _vm.Template = vm.Template;
            _vm.BackupFrequency = vm.BackupFrequency;
            _vm.Availability = vm.Availability;
            _vm.Mode = vm.Mode;
            _vm.Host = vm.Host;
            _vm.Client = vm.Client;
            _vm.Poorten = vm.Poorten;
        }
    }

    private void HandleTemplate(TemplateDto.Detail template){
        _vm.Template = template.Type;
        _vm.CPU = template.CPU;
        _vm.RAM = template.RAM;
        _vm.Storage = template.Storage;
        _vm.Mode = template.Mode;
    }
    private void CustomTemplate(){
        _showCustomTemplate = true;
    }
    private void ConfirmCustomTemp(TemplateDto.Detail template){
        _showCustomTemplate = false;

    }
    private void CancelCustomTemp(){
        _showCustomTemplate = false;
    }

    private void HandleValidSubmit()
    {
        //Aanmaken VM gevolg van aanvraag
        if (_request!=null)
        {

        }
        //wijzigen VM
        else if (Id.HasValue && VirtualMachineService.Get(Id.Value)!= null)
        {

        }
        //Aanmaken VM
        else
        {

        }   
    }
}
