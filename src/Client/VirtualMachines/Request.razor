@page "/vm/request"
@inject IVirtualMachineRequestService VirtualMachineRequestService
@inject NavigationManager NavigationManager
@inject IClientService ClientService
@inject IVirtualMachineRequestService VirtualMachineRequestService

<GenericLayout Display=false Title="VM Aanvragen">
    <Content>
        <div class="requestpage">
            <EditForm Model="@vmRequest" OnValidSubmit="@HandleValidSubmit">
                <FluentValidationValidator />
                <div class="form">
                    <div class="input-group">
                        <label>
                            Geef een naam aan het project waarvoor de VM wordt gebruikt <br />
                            <InputText @bind-Value="vmRequest.ProjectName" class="inputField" data-test-id="input-projectname"></InputText>
                            <ValidationMessage For="@(()=> vmRequest.ProjectName)"></ValidationMessage>
                        </label>

                        <label>
                            Start datum<br />
                            <InputDate @bind-Value="vmRequest.StartDate" class="inputField" data-test-id="input-startdate"></InputDate>
                            <ValidationMessage For="@(()=> vmRequest.StartDate)"></ValidationMessage>
                        </label>
                        <label>
                            Eind datum<br />
                            <InputDate @bind-Value="vmRequest.EndDate" class="inputField" data-test-id="input-enddate"></InputDate>
                            <ValidationMessage For="@(()=> vmRequest.EndDate)"></ValidationMessage>
                        </label>


                        <label class="reden">
                            Geef een omschrijving voor de aanvraag van de VM en andere informatie die belangrijk is voor
                            de aanvraag.<br />
                            <InputTextArea @bind-Value="vmRequest.Reason" class="inputField" data-test-id="input-reason"></InputTextArea>
                            <ValidationMessage For="@(()=> vmRequest.Reason)"></ValidationMessage>
                        </label>

                        @if (_existingClient)
                        {

                        }
                    </div>
                    <button type="submit" class="btn-primary" data-test-id="btn-submit">Submit</button>
                </div>
            </EditForm>
        </div>
    </Content>
</GenericLayout>

@if (_confirmMsg)
{
    <div class="background">
        <div class="window">
            <h2 data-test-id="msg-succes">Aanvraag werd succesvol aangemaakt</h2>
            <p>@($"Aanvraag voor {vmRequest.ProjectName} succesvol aangemaakt.")</p>
            <div class="window-buttons">
                <button class="btn-primary"
                    @onclick="RouteToHome">
                    Terug naar homescreen
                </button>
            </div>
        </div>
    </div>
}


@code {
    private VirtualMachineRequestDto.Create vmRequest = new();
    public bool _existingClient = true;
    private bool _confirmMsg = false;

    protected override void OnInitialized()
    {
        vmRequest.StartDate = DateTime.Now;
        vmRequest.EndDate = DateTime.Now;
    }

    private async Task HandleValidSubmit()
    {
        //TODO client moet de ingelogde client zijn
        ClientRequest.Index r = new();
        vmRequest.Client = (await ClientService.GetIndexAsync(r)).First();
        Console.WriteLine(vmRequest.Client.Id);
        int id = await VirtualMachineRequestService.CreateAsync(vmRequest);
        _confirmMsg = true;
    }

    private void RouteToHome(){
        _confirmMsg = false;
        NavigationManager.NavigateTo("");
    }
}
